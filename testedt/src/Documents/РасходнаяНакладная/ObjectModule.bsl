
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	СуммаПоДокументу = СписокНоменклатуры.Итог("Сумма");
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	ОбработкаПроведенияОУ(Отказ, РежимПроведения);
	ОбработкаПроведенияБУ(Отказ, РежимПроведения)
КонецПроцедуры

Процедура ОбработкаПроведенияОУ(Отказ, РежимПроведения)

	Движения.ОстаткиНоменклатуры.Записывать = Истина;
	Движения.ОстаткиНоменклатуры.Записать();
	
	Движения.ОстаткиНоменклатуры.Записывать = Истина;
	Движения.Продажи.Записывать = Истина;
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ОстаткиНоменклатуры");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = СписокНоменклатуры;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Партия", "Партия");
	Блокировка.Заблокировать();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РасходнаяНакладнаяСписокНоменклатуры.Номенклатура КАК Номенклатура,
		|	РасходнаяНакладнаяСписокНоменклатуры.Номенклатура.ВидНоменклатуры КАК ВидНоменклатуры,
		|	РасходнаяНакладнаяСписокНоменклатуры.Партия КАК Партия,
		|	СУММА(РасходнаяНакладнаяСписокНоменклатуры.Количество) КАК Количество,
		|	СУММА(РасходнаяНакладнаяСписокНоменклатуры.Сумма) КАК Сумма
		|ПОМЕСТИТЬ втСписокТоваров
		|ИЗ
		|	Документ.РасходнаяНакладная.СписокНоменклатуры КАК РасходнаяНакладнаяСписокНоменклатуры
		|ГДЕ
		|	РасходнаяНакладнаяСписокНоменклатуры.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	РасходнаяНакладнаяСписокНоменклатуры.Номенклатура,
		|	РасходнаяНакладнаяСписокНоменклатуры.Партия,
		|	РасходнаяНакладнаяСписокНоменклатуры.Номенклатура.ВидНоменклатуры
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура,
		|	Партия
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втСписокТоваров.Номенклатура КАК Номенклатура,
		|	втСписокТоваров.Номенклатура.Представление КАК НоменклатураПредставление,
		|	втСписокТоваров.ВидНоменклатуры КАК ВидНоменклатуры,
		|	втСписокТоваров.Партия.Представление КАК ПартияПредставление,
		|	втСписокТоваров.Партия КАК Партия,
		|	втСписокТоваров.Количество КАК Количество,
		|	ЕСТЬNULL(ОстаткиНоменклатурыОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
		|	ЕСТЬNULL(ОстаткиНоменклатурыОстатки.СебестоимостьОстаток, 0) КАК СебестоимостьОстаток,
		|	втСписокТоваров.Сумма КАК СуммаПродажи
		|ИЗ
		|	втСписокТоваров КАК втСписокТоваров
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиНоменклатуры.Остатки(
		|				&МоментВремени,
		|				(Номенклатура, Партия) В
		|					(ВЫБРАТЬ
		|						втСписокТоваров.Номенклатура КАК Номенклатура,
		|						втСписокТоваров.Партия КАК Партия
		|					ИЗ
		|						втСписокТоваров КАК втСписокТоваров
		|					ГДЕ
		|						втСписокТоваров.ВидНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ВидыНоменклатуры.Товар))) КАК ОстаткиНоменклатурыОстатки
		|		ПО втСписокТоваров.Номенклатура = ОстаткиНоменклатурыОстатки.Номенклатура
		|			И втСписокТоваров.Партия = ОстаткиНоменклатурыОстатки.Партия
		|ИТОГИ
		|	МАКСИМУМ(ВидНоменклатуры),
		|	СУММА(Количество),
		|	СУММА(СуммаПродажи)
		|ПО
		|	Номенклатура";
	
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаНоменклатура = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаНоменклатура.Следующий() Цикл
		
		ИтогоСебестоимость = 0;
		Если ВыборкаНоменклатура.ВидНоменклатуры = Перечисления.ВидыНоменклатуры.Товар Тогда
			
			Выборка = ВыборкаНоменклатура.Выбрать();
			Пока Выборка.Следующий() Цикл
				Если Выборка.Количество > Выборка.КоличествоОстаток Тогда
					Отказ = Истина;
					Сообщение = Новый СообщениеПользователю;
					Сообщение.Текст = СтрШаблон("Недостаточно номенклатуры %1 по партии %2 в количестве %3",
												Выборка.НоменклатураПредставление,
												Выборка.ПартияПредставление,
												Выборка.Количество - Выборка.КоличествоОстаток);
					Сообщение.Сообщить();
				КонецЕсли;
				
				Если Отказ Тогда
					Продолжить;
				КонецЕсли;
				
				Если Выборка.Количество = Выборка.КоличествоОстаток Тогда
					Себестоимость = Выборка.СебестоимостьОстаток;
				Иначе
					Себестоимость = Выборка.Количество/Выборка.КоличествоОстаток*Выборка.СебестоимостьОстаток;
				КонецЕсли;
				
				Движение = Движения.ОстаткиНоменклатуры.ДобавитьРасход();
				Движение.Период = Дата;
				Движение.Партия = Выборка.Партия;
				Движение.Номенклатура = Выборка.Номенклатура;
				Движение.Количество = Выборка.Количество;
				Движение.Себестоимость = Себестоимость;
				
				ИтогоСебестоимость = ИтогоСебестоимость + Движение.Себестоимость;
				
			КонецЦикла;
			
		КонецЕсли;
		
		Если Отказ Тогда
			Продолжить;
		КонецЕсли;
		
		Движение = Движения.Продажи.Добавить();
		Движение.Период = Дата;
		Движение.Номенклатура = ВыборкаНоменклатура.Номенклатура;
		Движение.Количество = ВыборкаНоменклатура.Количество;
		Движение.СуммаПродажи = ВыборкаНоменклатура.СуммаПродажи;
		Движение.Себестоимость = ИтогоСебестоимость;
		
	КонецЦикла;

КонецПроцедуры

Процедура ОбработкаПроведенияБУ(Отказ, РежимПроведения)
	
	Движения.Управленческий.Записывать = Истина;
	Движения.Записать();
	
	Движения.Управленческий.Записывать = Истина;
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрБухгалтерии.Управленческий");
	ЭлементБлокировки.УстановитьЗначение("Счет", ПланыСчетов.Управленческий.Товары);
	ЭлементБлокировки.ИсточникДанных = СписокНоменклатуры;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных(ПланыВидовХарактеристик.ВидыСубконто.Номенклатура, "Номенклатура");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	Блокировка.Заблокировать();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РасходнаяНакладнаяСписокНоменклатуры.Номенклатура КАК Номенклатура,
		|	СУММА(РасходнаяНакладнаяСписокНоменклатуры.Количество) КАК Количество,
		|	СУММА(РасходнаяНакладнаяСписокНоменклатуры.Сумма) КАК Сумма
		|ПОМЕСТИТЬ втСписокНоменклатуры
		|ИЗ
		|	Документ.РасходнаяНакладная.СписокНоменклатуры КАК РасходнаяНакладнаяСписокНоменклатуры
		|ГДЕ
		|	РасходнаяНакладнаяСписокНоменклатуры.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	РасходнаяНакладнаяСписокНоменклатуры.Номенклатура
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втСписокНоменклатуры.Номенклатура КАК Номенклатура,
		|	втСписокНоменклатуры.Количество КАК Количество,
		|	втСписокНоменклатуры.Сумма КАК Сумма,
		|	ЕСТЬNULL(УправленческийОстаткиПоСкладу.КоличествоОстаток, 0) КАК КоличествоОстатокПоСкладу,
		|	ЕСТЬNULL(УправленческийОстаткиПоКомпании.СуммаОстаток, 0) КАК СуммаОстатокПоКомпании,
		|	ЕСТЬNULL(УправленческийОстаткиПоКомпании.КоличествоОстаток, 0) КАК КоличествоОстатокПоКомпании,
		|	втСписокНоменклатуры.Номенклатура.Представление КАК НоменклатураПредставление
		|ИЗ
		|	втСписокНоменклатуры КАК втСписокНоменклатуры
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Управленческий.Остатки(
		|				&МоментВремени,
		|				Счет = &СчетТовары,
		|				&ВидыСубконто,
		|				Субконто1 В
		|						(ВЫБРАТЬ
		|							втСписокНоменклатуры.Номенклатура КАК Номенклатура
		|						ИЗ
		|							втСписокНоменклатуры КАК втСписокНоменклатуры)
		|					И Субконто2 = &Склад) КАК УправленческийОстаткиПоСкладу
		|		ПО втСписокНоменклатуры.Номенклатура = УправленческийОстаткиПоСкладу.Субконто1
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Управленческий.Остатки(
		|				&МоментВремени,
		|				Счет = &СчетТовары,
		|				&ВидСубконтоНоменклатура,
		|				Субконто1 В
		|					(ВЫБРАТЬ
		|						втСписокНоменклатуры.Номенклатура КАК Номенклатура
		|					ИЗ
		|						втСписокНоменклатуры КАК втСписокНоменклатуры)) КАК УправленческийОстаткиПоКомпании
		|		ПО втСписокНоменклатуры.Номенклатура = УправленческийОстаткиПоКомпании.Субконто1";
	
	ВидыСубконто = Новый Массив;
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконто.Номенклатура);
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконто.Склады);
	
	Запрос.УстановитьПараметр("ВидыСубконто", ВидыСубконто);
	Запрос.УстановитьПараметр("ВидСубконтоНоменклатура", ПланыВидовХарактеристик.ВидыСубконто.Номенклатура);

	Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("СчетТовары", ПланыСчетов.Управленческий.Товары);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.Количество > Выборка.КоличествоОстатокПоСкладу Тогда
		     Отказ = Истина;
			 Сообщение = Новый СообщениеПользователю;
			 Сообщение.Текст = СтрШаблон("Недостаточно %1 на складе в кол-ве %2",
				 Выборка.НоменклатураПредставление,
				 Выборка.Количество - Выборка.КоличествоОстатокПоСкладу);
			 Сообщение.Сообщить();
		 КонецЕсли;
		 
		 Если Отказ Тогда
			 Продолжить;
		 КонецЕсли;
		 
		 Если Выборка.Количество = Выборка.КоличествоОстатокПоКомпании Тогда
			 Себестоимость = Выборка.СуммаОстатокПоКомпании;	 
		 Иначе
			 Себестоимость = Выборка.СуммаОстатокПоКомпании / Выборка.КоличествоОстатокПоКомпании * Выборка.Количество;
		 КонецЕсли;
		 
		 Движение = Движения.Управленческий.Добавить();
		 Движение.Период = Дата;
		 Движение.СчетДт = ПланыСчетов.Управленческий.ПрибылиУбытки;
		 Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Проекты] = Проект;
		 Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Номенклатура] = Выборка.Номенклатура;
		 Движение.СчетКт = ПланыСчетов.Управленческий.Товары;
		 Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Склады] = Склад;
		 Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Номенклатура] = Выборка.Номенклатура;
		 Движение.КоличествоКт = Выборка.Количество;
		 Движение.Сумма = Себестоимость;
		 
		 Движение = Движения.Управленческий.Добавить();
		 Движение.Период = Дата;
		 Движение.СчетДт = ПланыСчетов.Управленческий.Покупатели;
		 Движение.СчетКт = ПланыСчетов.Управленческий.ПрибылиУбытки;
		 Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Проекты] = Проект;
		 Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Номенклатура] = Выборка.Номенклатура;
		 Движение.Сумма = Выборка.Сумма;

	КонецЦикла;
	
КонецПроцедуры


