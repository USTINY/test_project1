
Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	ПериодРегистрации = НачалоМесяца(Дата); 
	
	Движения.ОсновныеНачисления.Записывать = Истина;
	Движения.ВзаиморасчетыССотрудниками.Записывать = Истина;

	#Область ТекстЗапросаДвиженияОсновныеНачисления
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НачислениеЗарплатыОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	НачислениеЗарплатыОсновныеНачисления.Сотрудник КАК Сотрудник,
		|	НачислениеЗарплатыОсновныеНачисления.Подразделение КАК Подразделение,
		|	НачислениеЗарплатыОсновныеНачисления.ВидРасчета КАК ВидРасчета,
		|	НачислениеЗарплатыОсновныеНачисления.ДатаНачала КАК ДатаНачала,
		|	КОНЕЦПЕРИОДА(НачислениеЗарплатыОсновныеНачисления.ДатаОкончания, ДЕНЬ) КАК ДатаОкончания,
		|	НАЧАЛОПЕРИОДА(НачислениеЗарплатыОсновныеНачисления.Ссылка.Дата, МЕСЯЦ) КАК ПериодРегистрации,
		|	НачислениеЗарплатыОсновныеНачисления.Параметр КАК Параметр
		|ПОМЕСТИТЬ втОсновныеНачисления
		|ИЗ
		|	Документ.НачислениеЗарплаты.ОсновныеНачисления КАК НачислениеЗарплатыОсновныеНачисления
		|ГДЕ
		|	НачислениеЗарплатыОсновныеНачисления.Ссылка = &Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	втОсновныеНачисления.Сотрудник КАК Сотрудник,
		|	втОсновныеНачисления.Подразделение КАК Подразделение,
		|	втОсновныеНачисления.ВидРасчета КАК ВидРасчета,
		|	втОсновныеНачисления.ДатаНачала КАК ДатаНачала,
		|	втОсновныеНачисления.ДатаОкончания КАК ДатаОкончания,
		|	втОсновныеНачисления.ПериодРегистрации КАК ПериодРегистрации,
		|	ЕСТЬNULL(СведенияОСотрудниках.Период, ДАТАВРЕМЯ(1, 1, 1)) КАК Период,
		|	ЕСТЬNULL(СведенияОСотрудниках.Оклад, 0) КАК Оклад,
		|	втОсновныеНачисления.Параметр КАК Параметр
		|ПОМЕСТИТЬ втОсновныеНачисленияСОкладом
		|ИЗ
		|	втОсновныеНачисления КАК втОсновныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОСотрудниках КАК СведенияОСотрудниках
		|		ПО втОсновныеНачисления.Сотрудник = СведенияОСотрудниках.Сотрудник
		|			И (втОсновныеНачисления.ДатаОкончания >= ЕСТЬNULL(СведенияОСотрудниках.Период, ДАТАВРЕМЯ(1, 1, 1)))
		|ГДЕ
		|	втОсновныеНачисления.ВидРасчета  = &ВидРасчетаОклад
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втОсновныеНачисленияСОкладом.НомерСтроки КАК НомерСтроки,
		|	МАКСИМУМ(втОсновныеНачисленияСОкладом.Период) КАК Период
		|ПОМЕСТИТЬ втДатыСреза
		|ИЗ
		|	втОсновныеНачисленияСОкладом КАК втОсновныеНачисленияСОкладом
		|ГДЕ
		|	втОсновныеНачисленияСОкладом.ДатаНачала >= втОсновныеНачисленияСОкладом.Период
		|	И втОсновныеНачисленияСОкладом.Период <> ДАТАВРЕМЯ(1, 1, 1)
		|
		|СГРУППИРОВАТЬ ПО
		|	втОсновныеНачисленияСОкладом.НомерСтроки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НомерСтроки,
		|	Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втОсновныеНачисленияСОкладом.Сотрудник.Представление КАК СотрудникПредставление,
		|	втОсновныеНачисленияСОкладом.ДатаНачала КАК ДатаНачала
		|ИЗ
		|	втОсновныеНачисленияСОкладом КАК втОсновныеНачисленияСОкладом
		|ГДЕ
		|	НЕ втОсновныеНачисленияСОкладом.НомерСтроки В
		|				(ВЫБРАТЬ
		|					втДатыСреза.НомерСтроки КАК НомерСтроки
		|				ИЗ
		|					втДатыСреза КАК втДатыСреза)
		|
		|СГРУППИРОВАТЬ ПО
		|	втОсновныеНачисленияСОкладом.Сотрудник.Представление,
		|	втОсновныеНачисленияСОкладом.ДатаНачала
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втОсновныеНачисленияСОкладом.НомерСтроки КАК НомерСтроки,
		|	втОсновныеНачисленияСОкладом.Сотрудник КАК Сотрудник,
		|	втОсновныеНачисленияСОкладом.Подразделение КАК Подразделение,
		|	втОсновныеНачисленияСОкладом.ВидРасчета КАК ВидРасчета,
		|	втОсновныеНачисленияСОкладом.ДатаНачала КАК ПериодДействияНачало,
		|	втОсновныеНачисленияСОкладом.ДатаОкончания КАК ПериодДействияКонец,
		|	втОсновныеНачисленияСОкладом.ПериодРегистрации КАК ПериодРегистрации,
		|	втОсновныеНачисленияСОкладом.Период КАК Период,
		|	втОсновныеНачисленияСОкладом.Оклад КАК Оклад,
		|	втОсновныеНачисленияСОкладом.Параметр КАК Параметр
		|ИЗ
		|	втОсновныеНачисленияСОкладом КАК втОсновныеНачисленияСОкладом
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втДатыСреза КАК втДатыСреза
		|		ПО втОсновныеНачисленияСОкладом.НомерСтроки = втДатыСреза.НомерСтроки
		|			И втОсновныеНачисленияСОкладом.Период = втДатыСреза.Период
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	втОсновныеНачисленияСОкладом.НомерСтроки,
		|	втОсновныеНачисленияСОкладом.Сотрудник,
		|	втОсновныеНачисленияСОкладом.Подразделение,
		|	втОсновныеНачисленияСОкладом.ВидРасчета,
		|	втОсновныеНачисленияСОкладом.Период,
		|	втОсновныеНачисленияСОкладом.ДатаОкончания,
		|	втОсновныеНачисленияСОкладом.ПериодРегистрации,
		|	втОсновныеНачисленияСОкладом.Период,
		|	втОсновныеНачисленияСОкладом.Оклад,
		|	втОсновныеНачисленияСОкладом.Параметр
		|ИЗ
		|	втОсновныеНачисленияСОкладом КАК втОсновныеНачисленияСОкладом
		|ГДЕ
		|	втОсновныеНачисленияСОкладом.Период > втОсновныеНачисленияСОкладом.ДатаНачала
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	втОсновныеНачисления.НомерСтроки,
		|	втОсновныеНачисления.Сотрудник,
		|	втОсновныеНачисления.Подразделение,
		|	втОсновныеНачисления.ВидРасчета,
		|	втОсновныеНачисления.ДатаНачала,
		|	втОсновныеНачисления.ДатаОкончания,
		|	втОсновныеНачисления.ПериодРегистрации,
		|	ДАТАВРЕМЯ(1, 1, 1),
		|	0,
		|	втОсновныеНачисления.Параметр
		|ИЗ
		|	втОсновныеНачисления КАК втОсновныеНачисления
		|ГДЕ
		|	втОсновныеНачисления.ВидРасчета <> &ВидРасчетаОклад
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПериодДействияНачало
		|ИТОГИ ПО
		|	НомерСтроки";

	#КонецОбласти 
	
	ВидыРасчета = Новый Массив;
	ВидыРасчета.Добавить(ПланыВидовРасчета.ОсновныеНачисления.Оклад);
	
	Запрос.УстановитьПараметр("ВидыРасчета", ВидыРасчета);
	Запрос.УстановитьПараметр("ВидРасчетаОклад", ПланыВидовРасчета.ОсновныеНачисления.Оклад);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Если Не РезультатЗапроса[3].Пустой() Тогда
		
		Отказ = Истина;
		
		ВыборкаПроверка = РезультатЗапроса[3].Выбрать(); 
		Пока ВыборкаПроверка.Следующий() Цикл
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = СтрШаблон("По сотруднику %1 не установлен оклад на дату %2",
										ВыборкаПроверка.СотрудникПредставление, 
										Формат(ВыборкаПроверка.ДатаНачала,"ДФ=dd.MM.yyyy"));
			Сообщение.Сообщить();   
		КонецЦикла;
		
		Возврат;

	КонецЕсли;  
	
	ВыборкаПоНомеруСтроки = РезультатЗапроса[4].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоНомеруСтроки.Следующий() Цикл
	
		ДвижениеПредыдущее = Неопределено;  
		
		Выборка = ВыборкаПоНомеруСтроки.Выбрать();
		Пока Выборка.Следующий() Цикл
			Движение = Движения.ОсновныеНачисления.Добавить();
			ЗаполнитьЗначенияСвойств(Движение, Выборка); 
			Если ДвижениеПредыдущее <> Неопределено Тогда
				ДвижениеПредыдущее.ПериодДействияКонец = Выборка.ПериодДействияНачало - 1;	
			КонецЕсли; 
			ДвижениеПредыдущее = Движение; 
		КонецЦикла;
	
	КонецЦикла;
	
	Движения.ОсновныеНачисления.Записать();      
	
	// расчет оклада
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
		|	ЕСТЬNULL(ОсновныеНачисленияДанныеГрафика.ЧасовПериодДействия, 0) КАК НормаЧасов,
		|	ЕСТЬNULL(ОсновныеНачисленияДанныеГрафика.ЧасовФактическийПериодДействия, 0) КАК ЧасовОтработано
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисления.ДанныеГрафика(
		|			Регистратор = &Ссылка
		|				И ВидРасчета В (&ВидыРасчета)) КАК ОсновныеНачисленияДанныеГрафика";
	
	ВидыРасчета = Новый Массив;
	ВидыРасчета.Добавить(ПланыВидовРасчета.ОсновныеНачисления.Оклад);
	
	Запрос.УстановитьПараметр("ВидыРасчета", ВидыРасчета);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();

	Выборка = РезультатЗапроса.Выбрать();
	Для каждого Движение Из Движения.ОсновныеНачисления Цикл
		
		Если ВидыРасчета.Найти(Движение.ВидРасчета) = Неопределено Тогда
			Продолжить;
		КонецЕсли; 
		
		Выборка.Сбросить();
		Выборка.НайтиСледующий(Движение.НомерСтроки, "НомерСтроки");
		Движение.Результат = ?(Выборка.НормаЧасов=0,0,Движение.Оклад/Выборка.НормаЧасов*Выборка.ЧасовОтработано);
		ЗаполнитьЗначенияСвойств(Движение, Выборка, "НормаЧасов, ЧасовОтработано");
		
	КонецЦикла;

    Движения.ОсновныеНачисления.Записать(, Истина);
	
	// расчет премии и произвольной суммы денег
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ЕСТЬNULL(ОсновныеНачисленияБазаОсновныеНачисления.РезультатБаза, 0) КАК НачисленоБаза
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисления КАК ОсновныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисления.БазаОсновныеНачисления(
		|				&Измерения,
		|				&Измерения,
		|				,
		|				Регистратор = &Ссылка
		|					И ВидРасчета В (&ВидыРасчета)) КАК ОсновныеНачисленияБазаОсновныеНачисления
		|		ПО ОсновныеНачисления.НомерСтроки = ОсновныеНачисленияБазаОсновныеНачисления.НомерСтроки
		|ГДЕ
		|	ОсновныеНачисления.Регистратор = &Ссылка
		|	И ОсновныеНачисления.ВидРасчета В(&ВидыРасчета)";

	ВидыРасчетаДляРасчетваБазы = Новый Массив;
	ВидыРасчетаДляРасчетваБазы.Добавить(ПланыВидовРасчета.ОсновныеНачисления.Премия);
	Запрос.УстановитьПараметр("ВидыРасчета", ВидыРасчетаДляРасчетваБазы);
	
	Измерения = Новый Массив;
	Измерения.Добавить("Сотрудник");
	Запрос.УстановитьПараметр("Измерения", Измерения);
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Для каждого Движение Из Движения.ОсновныеНачисления Цикл
		
		Если ВидыРасчетаДляРасчетваБазы.Найти(Движение.ВидРасчета) <> Неопределено Тогда
			Выборка.Сбросить(); 
			Выборка.НайтиСледующий(Движение.НомерСтроки, "НомерСтроки");
			Движение.Результат = Выборка.НачисленоБаза*Движение.Параметр/100; 
			ЗаполнитьЗначенияСвойств(Движение, Выборка, "НачисленоБаза");
		ИначеЕсли Движение.ВидРасчета = ПланыВидовРасчета.ОсновныеНачисления.ПроизвольнаяСуммаДенег Тогда
			Движение.Результат = Движение.Параметр;
		КонецЕсли; 
		
	КонецЦикла;

	Движения.ОсновныеНачисления.Записать(, Истина);  
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОсновныеНачисления.Подразделение КАК Подразделение,
		|	ОсновныеНачисления.Сотрудник КАК Сотрудник,
		|	ОсновныеНачисления.ВидРасчета КАК ВидРасчета,
		|	СУММА(ОсновныеНачисления.Результат) КАК Сумма
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисления КАК ОсновныеНачисления
		|ГДЕ
		|	ОсновныеНачисления.Регистратор = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ОсновныеНачисления.Сотрудник,
		|	ОсновныеНачисления.Подразделение,
		|	ОсновныеНачисления.ВидРасчета";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл 
		Движение = Движения.ВзаиморасчетыССотрудниками.ДобавитьПриход();
		ЗаполнитьЗначенияСвойств(Движение, Выборка);  
		Движение.Период = Дата;
	КонецЦикла;
	
КонецПроцедуры      













